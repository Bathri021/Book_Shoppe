@model Book_Shoppe.Models.RegistrationFormViewModel
@{
    ViewBag.Title = "Register";
    Layout = "~/Views/Shared/_Layout.cshtml";
}


@using (Html.BeginForm("Register", "User", FormMethod.Post))
{
    @Html.AntiForgeryToken()
    <h2>Create new account</h2>

        if (ViewBag.Message != null)
        {
            <div class="alert alert-dismissible alert-primary" >
                <button type="button" class="close" data-dismiss="alert">&times;</button>
                <strong>@ViewBag.Message</strong>
            </div>
        }


    @Html.ValidationSummary(false, "", new { @class = "text-danger" })

    @*<div class="form-group">
        <div>
            @Html.LabelFor(m => m.UserID, new { @class = "col-form-label" })
        </div>
        <div>
            @Html.TextBoxFor(m => m.UserID, new { Value = "" + (ViewBag.userCount), id = "inputDefault", @class = "form-control", @readonly = "true" })
            @Html.ValidationMessageFor(m => m.UserID)
        </div>
    </div>*@
    <div class="form-group">
        <div>
            @Html.LabelFor(m => m.Name, new { @class = "col-form-label" })
        </div>
        <div>
            @Html.TextBoxFor(m => m.Name, new { @class = "form-control", id = "inputDefault" , maxlength="22" })
            @Html.ValidationMessageFor(m => m.Name)
        </div>
    </div>
        <div class="form-group">
            <div>
                @Html.LabelFor(m => m.UserName, new { @class = "col-form-label" })
            </div>
            <div>
                @Html.TextBoxFor(m => m.UserName, new { @class = "form-control", id = "inputDefault",maxlength="22" })
                @Html.ValidationMessageFor(m => m.UserName)
            </div>
        </div>
        <div class="form-group">
            <div>
                @Html.LabelFor(m => m.MailID, new { @class = "col-form-label" })
            </div>
            <div>
                @Html.TextBoxFor(m => m.MailID, new { @class = "form-control", id = "inputDefault" })
                @Html.ValidationMessageFor(m => m.MailID)
            </div>
        </div>
        <div class="form-group">
            <div>
                @Html.LabelFor(m => m.Password, new { @class = "col-form-label" })
            </div>
            <div>
                @Html.TextBoxFor(m => m.Password, new { @class = "form-control", id = "exampleInputPassword1", type = "password" })
                @Html.ValidationMessageFor(m => m.Password)
            </div>
        </div>
        <div class="form-group">
            <div>
                @Html.LabelFor(m => m.RoleID, new { @class = "col-form-label" })
            </div>
            <div class="nav-item dropdown">
                @Html.DropDownListFor(m => m.RoleID, (IEnumerable<SelectListItem>)ViewBag.Roles, "Select Role", new { @class = "nav-link dropdown-toggle dropdown-menu show", @style = "position: absolute; transform: translate3d(0px, 35px, 0px); top: -5vh; left: 0px; will-change: transform;" })
                <br/>
                <br/>
                @Html.ValidationMessageFor(m => m.RoleID, null, new { style = "margin-top:10vh" })
            </div>
        </div>

        <table>
            <tr>
                <td>
                    @if (ViewBag.Message != null)
                    {
                        <input type="submit" class="btn btn-outline-primary" id="submit" disabled />
                    }
                    else
                    {
                        <input type="submit" class="btn btn-outline-primary" id="submit" />
                    }

                </td>
                <td>
                    @Html.ActionLink("View List", "Index", null, new { @class = "btn btn-outline-info" })
                </td>
            </tr>
        </table>
}